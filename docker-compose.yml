version: '3.8'

services:
    traefik:
      # The official v3 Traefik docker image
      image: traefik:v3.1
      # Enables the web UI and tells Traefik to listen to docker
      command: 
       - "--log.level=DEBUG"
       - "--api.insecure=true"
       - "--providers.docker=true"
       - "--providers.docker.exposedbydefault=false"
       - "--entrypoints.web.address=:80"
       - "--entrypoints.websecure.address=:443"
       - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
       - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
       - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
       - "--entrypoints.websecure.http.tls=true" # Enable TLS for the websecure entrypoint
      restart: unless-stopped 
      ports:
        - "80:80" # HTTP
        - "443:443" # HTTPS        
        - "8080:8080" # The Web UI (enabled by --api.insecure=true)           
      networks:
        - web
      volumes:
        # So that Traefik can listen to the Docker events
        - /var/run/docker.sock:/var/run/docker.sock
        - ./certs:/certs # Mount the directory with your certificates
        - ./traefik.yml:/etc/tls
      labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.routers.traefik.service=api@internal      
      - traefik.docker.network=web   

    postgresdb:
      image: postgres:16-alpine
      restart: always
      env_file: ./.env
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 10s
        retries: 5
      environment:
        - POSTGRES_USER=$DB_USER
        - POSTGRES_PASSWORD=$DB_PASSWORD
        - POSTGRES_DB=$DB_NAME
      ports:
        - "$DOCKER_DB_PORT:$LOCAL_DB_PORT"
      expose:
        - "5432"
      volumes:
        - ./db:/var/lib/postgresql/data          
      networks:
        - web    

    app:
      depends_on:
        - postgresdb
        - traefik
      #build: ./hlove-app #there has to be a docker file here that is then built
      image: ghcr.io/kenmusembi/hlove_backend:${IMAGE_VERSION}
      command: sh -c "cd hlove && npm install && npm start"      
      working_dir: /
      restart: always
      env_file: ./.env            
      expose:        
        - "3000"
      ports:
        - "$NODE_LOCAL_PORT:$NODE_DOCKER_PORT"
      environment:
      - DB_HOST=postgresdb
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
      - DB_PORT=$DOCKER_DB_PORT
      stdin_open: true
      tty: true
      healthcheck:
        test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
        interval: 5s
        retries: 5        
        timeout: 10s  
      volumes:
        - ./:/hlove        
      networks:
        - web
      labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`localhost`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
    
volumes:  
  certs:
  db: ~
  hlove: 

networks:  
  web:
    external: true
    driver: bridge      
  
